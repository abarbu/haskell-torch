#!/usr/bin/env python

import site
import os
import stat
import subprocess
import sys
import torch
import inspect
import re
import urllib.request

print('Setting up pytorch configuration files')

withCuda = False
if "--without-cuda" in sys.argv:
    withCuda = False
elif "--with-cuda" in sys.argv:
    withCuda = True
    if withCuda:
        if torch.cuda.is_available():
            withCuda = True
        else:
            raise('You attempted to enable CUDA, but pythorch claims CUDA is not available :(')
else:
    withCuda = torch.cuda.is_available()

withJupyter = True
if "--without-jupyter" in sys.argv:
    withJupyter = False
elif "--with-jupyter" in sys.argv:
    withJupyter = True

pytorch_root = os.path.dirname(inspect.getfile(torch))
pytorch_version = re.search('([0-9]+\.[0-9]+\.[0-9]+)', torch.__version__).group(0)

print('Install path: ' + pytorch_root)
print('Version: ' + str(pytorch_version))
print('CUDA status: ' + str(withCuda))

print('Setting up LD_LIBRARY_PATH')

defaults_yaml = """- &pytorchdefaults
   # This file is AUTOGENERATED by generate-config.py which is run by setup.sh
   # You can of course modify it, but all of your changes will be blown away eventually.
  extra-lib-dirs:
    - {1}/lib/
    - {2}/lib/
  # NB -dynamic is for ghcide
  ghc-options:
    - -dynamic
    - -pgmlg++
    - -optc-std=c++11
    - -optc-DNO_PYTHON
    - -optc-D_GLIBCXX_USE_CXX11_ABI={3}
    - -optc-DWITH_CUDA={0}
    - -optl-Wl,-rpath,{1}/lib/
    - -optl-Wl,-rpath,{2}/lib/
    - -optl-fuse-ld=bfd
    - -threaded
    - -rtsopts
    - -with-rtsopts=-N
    - -lstdc++
    - -lnvToolsExt
    - -lhdf5
    - -lhdf5_hl
    - -ltorch
    - -lMagickWand-7.Q16HDRI
    - -lMagickCore-7.Q16HDRI
  extra-libraries:
    - stdc++
    - nvToolsExt
    - hdf5
    - hdf5_hl
    - torch
    - MagickWand-7.Q16HDRI
    - MagickCore-7.Q16HDRI
  include-dirs:
    - {1}/include/
    - {1}/include/ImageMagick-7/
    - {2}/include/
  cpp-options:
    - -DNO_PYTHON
    - -DMAGICKCORE_HDRI_ENABLE=1 -DMAGICKCORE_QUANTUM_DEPTH=16 -DMAGICKCORE_HDRI_ENABLE=1 -DMAGICKCORE_QUANTUM_DEPTH=16 -I{1}/include/ImageMagick-7/
    - -D_GLIBCXX_USE_CXX11_ABI={3}
    - -DWITH_CUDA={0}"""

stack_yaml = """resolver: nightly-2020-06-21
compiler: ghc-8.10.1

# This file is AUTOGENERATED by generate-config.py which is run by setup.sh
# You can of course modify it, but all of your changes will be blown away eventually.

packages:
- haskell-torch
- haskell-torch-tools
- haskell-torch-cbindings
- haskell-torch-imagemagick
- haskell-torch-tensorboard-proto
- interpolateIO
- haskell-torch-matio
- matplotlib-haskell
- docopt
- generics-eot
{2}

extra-deps:
  - lens-4.19.2

extra-include-dirs:
  - {1}/include
  - {1}/include/TH
  - {1}/pytorch/

extra-lib-dirs:
  - {0}/lib/
  - {1}/lib/

# NB This is for ghcide

ghc-options:
  "$everything": -dynamic
"""

with_cxx11_abi = 0
if torch.compiled_with_cxx11_abi():
    with_cxx11_abi = 1

print("Found installed PyTorch with built C++ bindings")
with open("config.yaml", "w") as f:
    f.write(defaults_yaml.format((1 if withCuda else 0),
                                 os.environ['CONDA_PREFIX'],
                                 pytorch_root,
                                 with_cxx11_abi))
with open("stack.yaml", "w") as f:
    f.write(stack_yaml.format(os.environ['CONDA_PREFIX'],
                              pytorch_root,
                              ("- ihaskell" if withJupyter else "")))

if withCuda:
    print('CUDA is enabled')
else:
    print('CUDA is disabled')
